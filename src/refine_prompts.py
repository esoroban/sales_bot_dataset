import os
import json
import openai

# –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
DATA_DIR = os.path.join(os.path.dirname(os.path.abspath(__file__)), "../data")
INPUT_FILE = os.path.join(DATA_DIR, "prompts.json")
OUTPUT_FILE = os.path.join(DATA_DIR, "refined_prompts.json")

# –ó–∞–≥—Ä—É–∑–∫–∞ API-–∫–ª—é—á–∞
from dotenv import load_dotenv
load_dotenv()

openai.api_key = os.getenv("OPENAI_API_KEY")

def load_prompts():
    """–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î —Å–ø–∏—Å–æ–∫ –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑ prompts.json"""
    if not os.path.exists(INPUT_FILE):
        print(f"‚ùå –§–∞–π–ª {INPUT_FILE} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ! –ó–∞–ø—É—Å—Ç—ñ—Ç—å generate_prompts.py.")
        return []
    
    with open(INPUT_FILE, "r", encoding="utf-8") as file:
        prompts = json.load(file)
    
    if not prompts:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞: –§–∞–π–ª prompts.json –ø–æ—Ä–æ–∂–Ω—ñ–π!")
    
    return prompts

def refine_prompt(prompt):
    """–õ—ñ—Ç–µ—Ä–∞—Ç—É—Ä–Ω–æ –ø–æ–∫—Ä–∞—â—É—î —Ç–µ–∫—Å—Ç, –¥–æ–¥–∞—é—á–∏ –ø—Ä–∏—Ä–æ–¥–Ω–æ—Å—Ç—ñ"""
    system_prompt = """
    –¢–∏ —Å—Ü–µ–Ω–∞—Ä–∏—Å—Ç, —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –∂–∏–≤–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤ –¥–ª—è –¥—ñ–∞–ª–æ–≥—ñ–≤.
    –¢–∏ –æ—Ç—Ä–∏–º—É—î—à –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –æ–ø–∏—Å –∫–ª—ñ—î–Ω—Ç–∞ —ñ –º–∞—î—à –ø–µ—Ä–µ–ø–∏—Å–∞—Ç–∏ –π–æ–≥–æ —Ç–∞–∫, —â–æ–± –≤—ñ–Ω –∑–≤—É—á–∞–≤ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–∏—Ä–æ–¥–Ω–æ.
    
    üîπ –í–∞–∂–ª–∏–≤–æ:
    1. –ü–∏—à–∏ **–≤—ñ–¥ –ø–µ—Ä—à–æ—ó –æ—Å–æ–±–∏** (–Ø, –ú–µ–Ω—ñ, –£ –º–µ–Ω–µ...).
    2. –ù–µ –∑–º—ñ–Ω—é–π –∑–º—ñ—Å—Ç, —Ç—ñ–ª—å–∫–∏ –¥–æ–¥–∞–≤–∞–π –∂–∏–≤–æ—Å—Ç—ñ, –∑–º—É—à—É–π —Ç–µ–∫—Å—Ç "–¥–∏—Ö–∞—Ç–∏".
    3. –¢–æ–Ω –º–∞—î –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏ —Å—Ç–∏–ª—é —Ä–æ–∑–º–æ–≤–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (–≥—Ä—É–±–∏–π, —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω–∏–π, –≤–≤—ñ—á–ª–∏–≤–∏–π —Ç–æ—â–æ).
    4. –í—ñ–¥–ø–æ–≤—ñ–¥—ñ –º–∞—é—Ç—å –±—É—Ç–∏ **–∫–æ—Ä–æ—Ç–∫–∏–º–∏, –¥–æ 3-4 —Ä–µ—á–µ–Ω—å**.
    
    üìå **–ü—Ä–∏–∫–ª–∞–¥**  
    **–ë—É–ª–æ:**  
    "–¢–∏ –Ü–≤–∞–Ω, —Ç–æ–±—ñ 24. –¢–∏ –º–µ—Ö–∞–Ω—ñ–∫, –∑–∞—Ö–æ–ø–ª—é—î—à—Å—è —Ñ—É—Ç–±–æ–ª–æ–º. –¢–≤—ñ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä ‚Äî —ñ–Ω—Ç—Ä–æ–≤–µ—Ä—Ç."  
      
    **–°—Ç–∞–ª–æ:**  
    "–Ø –Ü–≤–∞–Ω, –º–µ–Ω—ñ 24. –Ø –º–µ—Ö–∞–Ω—ñ–∫, –ø–æ—Å—Ç—ñ–π–Ω–æ –∫—Ä—É—á—É—Å—è –±—ñ–ª—è –∞–≤—Ç–æ. –õ—é–±–ª—é —Ñ—É—Ç–±–æ–ª, –∞–ª–µ –±—ñ–ª—å—à–µ —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—Ç–∏, –Ω—ñ–∂ –≥—Ä–∞—Ç–∏. –Ø –Ω–µ –ª—é–±–ª—é –¥–æ–≤–≥—ñ —Ä–æ–∑–º–æ–≤–∏, –≤–æ–ª—ñ—é —Å–∫–∞–∑–∞—Ç–∏ –ø—Ä—è–º–æ, —â–æ –¥—É–º–∞—é."
    """

    try:
        response = openai.ChatCompletion.create(
            model="gpt-4o",
            messages=[
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": prompt["text"]}
            ],
            max_tokens=500,
            temperature=0.7
        )
        return response['choices'][0]['message']['content'].strip()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –ø—Ä–æ–º–ø—Ç–∞: {e}")
        return prompt["text"]

def refine_prompts():
    """–ß–∏—Ç–∞—î –ø—Ä–æ–º–ø—Ç–∏, –ø–æ–∫—Ä–∞—â—É—î —ó—Ö —ñ –∑–±–µ—Ä—ñ–≥–∞—î —É –Ω–æ–≤–∏–π JSON"""
    prompts = load_prompts()
    if not prompts:
        print("‚ùå –ù–µ–º–æ–∂–ª–∏–≤–æ –æ–±—Ä–æ–±–∏—Ç–∏ –ø—Ä–æ–º–ø—Ç–∏!")
        return
    
    refined_prompts = []

    for i, prompt in enumerate(prompts):
        print(f"üõ† –û–±—Ä–æ–±–ª—è—î—Ç—å—Å—è –∫–ª—ñ—î–Ω—Ç {i+1}: {prompt['id']}...")
        refined_text = refine_prompt(prompt)
        refined_prompts.append({"id": prompt["id"], "text": refined_text})
        print(f"‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ –¥–ª—è {prompt['id']}!")

    with open(OUTPUT_FILE, "w", encoding="utf-8") as file:
        json.dump(refined_prompts, file, ensure_ascii=False, indent=4)

    print(f"\n‚úÖ –û–Ω–æ–≤–ª–µ–Ω—ñ –ø—Ä–æ–º–ø—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É {OUTPUT_FILE}!")

if __name__ == "__main__":
    refine_prompts()