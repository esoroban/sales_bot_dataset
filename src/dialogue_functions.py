import json

_dialogue_stopped = False  # –ì–ª–æ–±–∞–ª—å–Ω–∏–π (—á–∏ –º–æ–¥—É–ª—å–Ω–∏–π) –ø—Ä–∞–ø–æ—Ä–µ—Ü—å, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –¥—É–±–ª—é–≤–∞–Ω–∏—Ö –≤–∏–∫–ª–∏–∫—ñ–≤

def stop_dialogue(reason: str):
    """
    –õ–æ–∫–∞–ª—å–Ω–∞ Python-—Ñ—É–Ω–∫—Ü—ñ—è, —è–∫—É GPT –≤–∏–∫–ª–∏–∫–∞—î, –∫–æ–ª–∏ –≤–∏—Ä—ñ—à—É—î,
    —â–æ –¥—ñ–∞–ª–æ–≥ —Ç—Ä–µ–±–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –ø—ñ—Å–ª—è 2-—ó –≤—ñ–¥–º–æ–≤–∏).
    –Ø–∫—â–æ –≤–∂–µ –≤–∏–∫–ª–∏–∫–∞–ª–∞—Å—å, –≤–¥—Ä—É–≥–µ –Ω–µ –≤–∏–≤–æ–¥–∏—Ç—å –¥—É–±–ª—é—é—á–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å.
    """
    global _dialogue_stopped
    if _dialogue_stopped:
        return
    _dialogue_stopped = True
    print(f"üõë stop_dialogue –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∑ –ø—Ä–∏—á–∏–Ω–æ—é: {reason}\n")

stop_dialogue_schema = {
    "name": "stop_dialogue",
    "description": "–ó–∞–≤–µ—Ä—à—É—î –ø–æ—Ç–æ—á–Ω–∏–π –¥—ñ–∞–ª–æ–≥. –ü–æ—è—Å–Ω—é—î, —á–æ–º—É –¥—ñ–∞–ª–æ–≥ –∑—É–ø–∏–Ω—è—î—Ç—å—Å—è.",
    "parameters": {
        "type": "object",
        "properties": {
            "reason": {
                "type": "string",
                "description": "–ü—Ä–∏—á–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è (–Ω–∞–ø—Ä. '–¥—Ä—É–≥–∞ –≤—ñ–¥–º–æ–≤–∞' –∞–±–æ '–Ω–µ–º–∞—î —ñ–Ω—Ç–µ—Ä–µ—Å—É')"
            }
        },
        "required": ["reason"]
    }
}

def price_info():
    """
    –§—É–Ω–∫—Ü—ñ—è, —è–∫—É GPT –≤–∏–∫–ª–∏–∫–∞—î –¥–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤–∞—Ä—Ç–æ—Å—Ç—ñ –∫—É—Ä—Å—É.
    (–í—Å—è –ª–æ–≥—ñ–∫–∞ –ª–∏—à–µ —Ç—É—Ç, –±–µ–∑ –¥—É–±–ª—é–≤–∞–Ω—å —É —Ç–µ–∫—Å—Ç—ñ –±–æ—Ç–∞.)
    """
    print("üí∞ –¶—ñ–Ω–∞ –∑–∞ –∫—É—Ä—Å: 2000 –≥—Ä–Ω –Ω–∞ –º—ñ—Å—è—Ü—å.")

price_info_schema = {
    "name": "price_info",
    "description": "–ü–æ–≤–µ—Ä—Ç–∞—î –≤–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–Ω—è—Ç—å: 2000 –≥—Ä–Ω –Ω–∞ –º—ñ—Å—è—Ü—å",
    "parameters": {
        "type": "object",
        "properties": {},
        "required": []
    }
}

def sign_for_promo(city="Dnipro", child_name="–ù–æ–Ω–µ–π–º", phone="12345678"):
    """
    –§—É–Ω–∫—Ü—ñ—è, —è–∫—É GPT –≤–∏–∫–ª–∏–∫–∞—î –¥–ª—è –∑–∞–ø–∏—Å—É –Ω–∞ –ø—Ä–æ–±–Ω–∏–π —É—Ä–æ–∫.
    """
    print(f"‚úç –ó–∞–ø–∏—Å—É—î–º–æ –Ω–∞ –ø—Ä–æ–º–æ: {city}, {child_name}, {phone}")

sign_for_promo_schema = {
    "name": "sign_for_promo",
    "description": "–ó–∞–ø–∏—Å—É—î –Ω–∞ –ø—Ä–æ–±–Ω–∏–π —É—Ä–æ–∫.",
    "parameters": {
        "type": "object",
        "properties": {
            "city": {
                "type": "string",
                "description": "–ú—ñ—Å—Ç–æ"
            },
            "child_name": {
                "type": "string",
                "description": "–Ü–º'—è –¥–∏—Ç–∏–Ω–∏"
            },
            "phone": {
                "type": "string",
                "description": "–¢–µ–ª–µ—Ñ–æ–Ω"
            }
        },
        "required": ["city", "child_name", "phone"]
    }
}

def generate_price_info_json():
    """
    –ü–æ–≤–µ—Ä—Ç–∞—î JSON, —è–∫–∏–π –ø–æ–∫–∞–∑—É—î –≤–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó price_info().
    """
    return json.dumps({
        "function_call": {
            "name": "price_info",
            "arguments": {}
        }
    }, ensure_ascii=False)

def generate_stop_dialogue_json(reason="–¥—Ä—É–≥–∞ –≤—ñ–¥–º–æ–≤–∞"):
    """
    –ü–æ–≤–µ—Ä—Ç–∞—î JSON, —è–∫–∏–π –ø–æ–∫–∞–∑—É—î –≤–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó stop_dialogue(reason).
    """
    return json.dumps({
        "function_call": {
            "name": "stop_dialogue",
            "arguments": {
                "reason": reason
            }
        }
    }, ensure_ascii=False)

def generate_sign_for_promo_json(city="Dnipro", child_name="–ù–æ–Ω–µ–π–º", phone="12345678"):
    """
    –ü–æ–≤–µ—Ä—Ç–∞—î JSON, —è–∫–∏–π –ø–æ–∫–∞–∑—É—î –≤–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó sign_for_promo().
    """
    return json.dumps({
        "function_call": {
            "name": "sign_for_promo",
            "arguments": {
                "city": city,
                "child_name": child_name,
                "phone": phone
            }
        }
    }, ensure_ascii=False)

def handle_ai_function_call(choice):
    """
    –ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ GPT –≤–∏–∫–ª–∏–∫–∞–ª–∞ stop_dialogue(reason), price_info() –∞–±–æ sign_for_promo().
    –í–∏–∫–æ–Ω—É—î –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î:
      - True, —è–∫—â–æ —Ü–µ –±—É–≤ stop_dialogue (–¥—ñ–∞–ª–æ–≥ —Ç—Ä–µ–±–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–∏),
      - False, —è–∫—â–æ —Ü–µ –±—É–≤ price_info —á–∏ sign_for_promo (–¥—ñ–∞–ª–æ–≥ —Ç—Ä–∏–≤–∞—î).
    """
    if "message" not in choice:
        return False
    msg = choice["message"]
    if "function_call" in msg:
        func_call = msg["function_call"]
        name = func_call["name"]
        args_str = func_call.get("arguments") or "{}"
        args = json.loads(args_str)

        if name == "stop_dialogue":
            reason = args.get("reason", "")
            stop_dialogue(reason)
            return True
        elif name == "price_info":
            price_info()
            return False
        elif name == "sign_for_promo":
            city = args.get("city", "Dnipro")
            child_name = args.get("child_name", "–ù–æ–Ω–µ–π–º")
            phone = args.get("phone", "12345678")
            sign_for_promo(city, child_name, phone)
            return False

    return False