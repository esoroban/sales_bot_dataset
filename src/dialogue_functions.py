import json

def stop_dialogue(reason: str):
    """
    –†–µ–∞–ª—å–Ω–∞ Python-—Ñ—É–Ω–∫—Ü—ñ—è, —è–∫—É GPT-4o –≤–∏–∫–ª–∏–∫–∞—î,
    –∫–æ–ª–∏ –≤–∏—Ä—ñ—à—É—î, —â–æ –¥—ñ–∞–ª–æ–≥ —Ç—Ä–µ–±–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–∏.
    (–ù–∞–ø—Ä–∏–∫–ª–∞–¥, –ø—ñ—Å–ª—è –¥—Ä—É–≥–æ—ó –≤—ñ–¥–º–æ–≤–∏ –≤—ñ–¥ –∫–ª—ñ—î–Ω—Ç–∞)
    """
    print(f"üõë stop_dialogue –≤–∏–∫–ª–∏–∫–∞–Ω–æ –∑ –ø—Ä–∏—á–∏–Ω–æ—é: {reason}\n")

stop_dialogue_schema = {
    "name": "stop_dialogue",
    "description": "–ó–∞–≤–µ—Ä—à—É—î –ø–æ—Ç–æ—á–Ω–∏–π –¥—ñ–∞–ª–æ–≥. –ü–æ—è—Å–Ω—é—î, —á–æ–º—É –¥—ñ–∞–ª–æ–≥ –∑—É–ø–∏–Ω—è—î—Ç—å—Å—è.",
    "parameters": {
        "type": "object",
        "properties": {
            "reason": {
                "type": "string",
                "description": "–ü—Ä–∏—á–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è (–Ω–∞–ø—Ä. '–¥—Ä—É–≥–∞ –≤—ñ–¥–º–æ–≤–∞' –∞–±–æ '–Ω–µ–º–∞—î —ñ–Ω—Ç–µ—Ä–µ—Å—É')"
            }
        },
        "required": ["reason"]
    }
}

def handle_ai_function_call(choice):
    """
    –ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ GPT –≤–∏–∫–ª–∏–∫–∞–ª–∞ stop_dialogue(reason).
    –Ø–∫—â–æ —Ç–∞–∫, –≤–∏–∫–ª–∏–∫–∞—î stop_dialogue(reason) –ª–æ–∫–∞–ª—å–Ω–æ
    —ñ –ø–æ–≤–µ—Ä—Ç–∞—î True, –∞–±–∏ –≥–æ–ª–æ–≤–Ω–∏–π —Ü–∏–∫–ª –∑–∞–≤–µ—Ä—à–∏–≤ –¥—ñ–∞–ª–æ–≥.
    –Ø–∫—â–æ –Ω—ñ, –ø–æ–≤–µ—Ä—Ç–∞—î False.
    """
    if "message" not in choice:
        return False
    msg = choice["message"]
    if "function_call" in msg:
        func_call = msg["function_call"]
        if func_call["name"] == "stop_dialogue":
            args = json.loads(func_call["arguments"])
            reason = args.get("reason", "")
            stop_dialogue(reason)
            return True
    return False